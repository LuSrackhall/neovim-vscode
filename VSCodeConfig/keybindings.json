[
  // some config....
  // ...
  // ...

  ///////////////////////////        NeoVim区域 start       ////////////////////////////////////////////////////////////
  {
    // TIPS: 需要注意的是, 对于ctrl+c来说, 似乎绑定一个命令后, 就无法绑定其它命令了(主要是我所需要的 复制 和 esc 功能在这里似乎冲突了)
    //       > TIPS: 比如我在这里定义的传递功能, 也影响到了vscode的系统复制api 以及neovim自带的 esc  api的触发。
    "key": "ctrl+c",
    "command": "vscode-neovim.send",
    "when": "editorTextFocus && neovim.mode != 'normal'",
    // Send this input to Neovim.
    "args": "<C-c>"
  },
  {
    "key": "ctrl+f",
    "command": "vscode-neovim.send",
    "when": "editorTextFocus",
    // Send this input to Neovim.
    "args": "<C-f>"
  }

  /* // 这个可以精确的实现类似neovim中 <leader>e 的功能, 但是其影响到了通过neovim的<leader>键, 为vscode映射按键的能力。
  // 资源管理器聚焦快捷键
  {
    // 当侧边栏没有焦点时，按 Space+e 会打开并聚焦到资源管理器
    "key": "space e",
    "command": "workbench.view.explorer",
    "when": "editorFocus && !terminalFindWidgetFocus && !searchInputBoxFocus && !inQuickOpen && !terminalFocus && !sideBarFocus && neovim.mode != 'insert'"
  },
  {
    // 当侧边栏有焦点时，按 Space+e 会关闭侧边栏
    "key": "space e",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "!debugConsoleInputFocus && !findInputFocussed && !terminalFindWidgetFocus && !searchInputBoxFocus && !inQuickOpen && !terminalFocus && sideBarFocus && neovim.mode != 'insert'"
  } 
  */

  ///////////////////////////       NeoVim区域  end       //////////////////////////////////////////////////////////////
]
